/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { EqualAnteProposition } from "../EqualAnteProposition";

export class EqualAnteProposition__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _title: string,
    _resolution_time: BigNumberish,
    _bet_closing_time: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EqualAnteProposition> {
    return super.deploy(
      _title,
      _resolution_time,
      _bet_closing_time,
      overrides || {}
    ) as Promise<EqualAnteProposition>;
  }
  getDeployTransaction(
    _title: string,
    _resolution_time: BigNumberish,
    _bet_closing_time: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _title,
      _resolution_time,
      _bet_closing_time,
      overrides || {}
    );
  }
  attach(address: string): EqualAnteProposition {
    return super.attach(address) as EqualAnteProposition;
  }
  connect(signer: Signer): EqualAnteProposition__factory {
    return super.connect(signer) as EqualAnteProposition__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EqualAnteProposition {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EqualAnteProposition;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_resolution_time",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bet_closing_time",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newMember",
        type: "address",
      },
    ],
    name: "addMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bet_closing_time",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "checkMembership",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyBet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "resolution_time",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "title",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "wager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a68380380610a688339818101604052606081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b8382019150602082018581111561006957600080fd5b825186600182028301116401000000008211171561008657600080fd5b8083526020830192505050908051906020019080838360005b838110156100ba57808201518184015260208101905061009f565b50505050905090810190601f1680156100e75780820380516001836020036101000a031916815260200191505b50604052602001805190602001909291908051906020019092919050505082828260016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550826003908051906020019061017592919061018f565b50816005819055508060048190555050505050505061022c565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101d057805160ff19168380011785556101fe565b828001600101855582156101fe579182015b828111156101fd5782518255916020019190600101906101e2565b5b50905061020b919061020f565b5090565b5b80821115610228576000816000905550600101610210565b5090565b61082d8061023b6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063667d5d2211610066578063667d5d22146101b1578063b24b05f8146101bb578063b76b0b99146101d9578063ca6d56dc14610207578063eb074d781461024b57610093565b806316f0115b14610098578063441cfe02146100b65780634a79d50c146100d45780635fb64fd614610157575b600080fd5b6100a0610269565b6040518082815260200191505060405180910390f35b6100be61026f565b6040518082815260200191505060405180910390f35b6100dc610275565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101996004803603602081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610313565b60405180821515815260200191505060405180910390f35b6101b9610368565b005b6101c361047d565b6040518082815260200191505060405180910390f35b610205600480360360208110156101ef57600080fd5b8101908080359060200190929190505050610582565b005b6102496004803603602081101561021d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a4565b005b6102536107bc565b6040518082815260200191505060405180910390f35b60025481565b60055481565b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561030b5780601f106102e05761010080835404028352916020019161030b565b820191906000526020600020905b8154815290600101906020018083116102ee57829003601f168201915b505050505081565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610426576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f43616c6c6572206973206e6f742061206d656d6265720000000000000000000081525060200191505060405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600260008282540192505081905550565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661053d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f43616c6c6572206973206e6f742061206d656d6265720000000000000000000081525060200191505060405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610640576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f43616c6c6572206973206e6f742061206d656d6265720000000000000000000081525060200191505060405180910390fd5b60018114610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806107c36035913960400191505060405180910390fd5b6106a1610368565b50565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610762576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f43616c6c6572206973206e6f742061206d656d6265720000000000000000000081525060200191505060405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6004548156fe43616e6e6f74207761676572206d6f7265207468616e203120696e20616e20657175616c20616e74652070726f706f736974696f6ea264697066735822122055165012baef81930007661701432146312d4469e6b608eb61a3f62cf68b8eab64736f6c63430007030033";
