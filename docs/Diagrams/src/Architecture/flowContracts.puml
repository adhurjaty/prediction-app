@startuml

title Flow Contracts

namespace BetsLibrary {
    entity YesNoBet {
        member: Address?
        prediction: Bool?
        wager: Vault<FUSD>
        placeBet(prediction: Bool, wager: Vault<FUSD>): void
    }

    entity ScalarBet {
        prediction: Int?
        wager: Vault<FUSD>
        placeBet(prediction: Int, wager: Vault<FUSD>): void
    }

    entity YesNoBetStruct {
        prediction: Bool
        wager: Float
    }

    entity ScalarBetStruct {
        prediction: Int
        wager: Float
    }

    entity YesNoBetStub {
        member: Address
        prediction: Bool
        wager: Float
    }

    entity ScalarBetStub {
        member: Address
        prediction: Int
        wager: Float
    }

    interface BetContract {
        closeTime: DateTime
        getExpectedPayout(Address): Float
    }

    interface YesNoBetContract {
        wager(YesNoBet): YesNoBetStub
        getWager(Address): YesNoBetStruct
    }

    interface ScalarBetContract {
        wager(ScalarBet): void
        getWager(Address): ScalarBetStruct
    }

    class HubAndSpokesBet {
        -hubBet: YesNoBet
        -spokeBets: {Address: YesNoBet}
        -pool: Float
        closeTime: DateTime
        wager(YesNoBet): YesNoBetStub
        getWager(Address): YesNoBetStruct
        getExpectedPayout(Address): Float
    }

    class ManyToManyBet {
        -bets: {Address: YesNoBet}
        -pool: Float
        closeTime: DateTime
        wager(YesNoBet): YesNoBetStub
        getWager(Address): YesNoBetStruct
        getExpectedPayout(Address): Float
    }

    YesNoBetContract --|> BetContract
    ScalarBetContract --|> BetContract
    HubAndSpokesBet --|> YesNoBetContract
    ManyToManyBet --|> YesNoBetContract
}

namespace ResolverLibrary {
    entity YesNoOutcome {
        outcome: Bool
    }

    entity VoteScalarOutcome {
        outcome: Bool
    }

    interface YesNoResolver {
        outcome: Bool?
    }

    interface VoteYesNoResolver {
        vote(YesNoOutcome): void
    }

    interface OracleYesNoResolver {
        checkOracle(): void
    }

    class MajorityYesNoResolver {
        -numMembers: UInt
        -numYeses: UInt
        -numNos: UInt
        outcome: Bool?
        vote(YesNoOutcome): void
    }

    class UnanimousYesNoResolver {
        -numMembers: UInt
        outcome: Bool?
        vote(YesNoOutcome): void
    }


    VoteYesNoResolver --|> YesNoResolver
    OracleYesNoResolver --|> YesNoResolver
    MajorityYesNoResolver --|> VoteYesNoResolver
    UnanimousYesNoResolver --|> VoteYesNoResolver
}

namespace BetResolverComposer {
    interface YesNoVoteBet {

    }

    entity Administrator {
        createHubAndSpokesVoteBet(): \nHubAndSpokesVoteBet
    }

    class HubAndSpokesVoteBet {
        -bet: HubAndSpokesBet
        -resolver: MajorityYesNoResolver
        -memberBetTokens: {Address: YesNoBet}
        -memberVoteTokens: {Address: YesNoOutcome}
        closeTime: DateTime
        outcome: Bool?
        wager(YesNoBet): void
        getWager(Address): YesNoBetStruct
        getExpectedPayout(Address): Float
        vote(YesNoOutcome): void
    }

    HubAndSpokesVoteBet --|> YesNoVoteBet
}

BetResolverComposer.YesNoVoteBet --|> BetsLibrary.YesNoBetContract
BetResolverComposer.YesNoVoteBet --|> ResolverLibrary.VoteYesNoResolver
BetResolverComposer.HubAndSpokesVoteBet --* BetsLibrary.HubAndSpokesBet
BetResolverComposer.HubAndSpokesVoteBet --* ResolverLibrary.MajorityYesNoResolver

@enduml